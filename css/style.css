/*Estilos Gerais*/
.item {
    margin: 5px;
    background: powderblue;
    text-align: center;
    font-size: 1.5em;
}

.grid {
    max-width: 400px;
    margin: 0 auto;
    border: 1px solid #ccc;
}

h1 {
    text-align: center;
    font-size: 1.25em;
    font-weight: normal;
}

h2 {
    text-align: center;
    font-size: 20px;
    font-weight: bold;
    text-decoration: underline;
}

p {
    text-align: center;
    font-size: 1.25em;
    color:rgb(3, 109, 103);
    font-weight: bold;
}

body {
    font-family: monospace;
    color: #333;
    margin: 0px;
    padding-bottom: 60px;
}

body > div {
    padding: 40px 0;
}

body > div:nth-of-type(even) {
    background: rgb(248, 248, 227);
}

body > div > img {
    display: block;
    margin: 0 auto;
    max-width: 100%;
}

/*Grid Container*/
.grid {
    display: grid;
    background: rgb(112, 0, 112);
}

.grid-template-columns {
    grid-template-columns: 200px 200px;
}

.grid-template-columns-3 {
    grid-template-columns: 1fr 2fr 1fr;
}

.subgrid {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-gap: 10px;
}

.subgrid > div {
    background: plum;
}

/*grid-template-columns*/

.grid-ex2 {
    max-width: 400px;
    margin: 0 auto;
    border: 1px solid #ccc;
    background: rgb(250, 139, 156);
}

/*100px é o valor total, ignora conteúdo, margem e etc. Respeita apenas o min-width do item*/
.grid-template-columns-1 {
    grid-template-columns: 100px 100px 100px 100px;
}

/*fr é uma unidade fracional*/
.grid-template-columns-2 {
    grid-template-columns: 1fr 2fr;
}

/*minmax define um valor mínimo e máximo para a coluna*/
.grid-template-columns-3-ex2 {
    grid-template-columns: minmax(200px, 1fr) 1fr 1fr;
}

/*O repeat vai repetir o número de colunas*/
.grid-template-colums-4 {
    grid-template-columns: repeat(3, 1fr);
}

/*Auto-fit vai calcular automaticamente o total de colunas*/
.grid-template-columns-5 {
    grid-template-columns: repeat(auto-fit, 100px);
}

/*Com o auto-fit realmente é criado um layout responsivo*/
.grid-template-columns-6 {
    grid-template-columns: repeat(auto-fit, minmax(100px, auto));
}

/*Com o auto-fit realmente é criado um layout responsivo*/
.grid-template-columns-7 {
    grid-template-columns: repeat(auto-fill, minmax(100px, auto));
}



/*grid-template-rows*/

.grid-ex3 {
    display: grid;
    grid-template-columns: 1fr 1fr;
    background: rgb(68, 128, 71);
}

.grid-template-rows-1 {
    grid-template-rows: 50px 100px 50px 150px;
}

.grid-template-rows-2 {
    grid-template-rows: 100px 100px;
}

.grid-template-rows-3 {
    grid-template-rows: 1fr 2fr 1fr 3fr;
}

.grid-template-rows-4 {
    grid-template-columns: 100px auto 50px;
    grid-template-rows: 50px 200px auto;
}

/*grid-template-areas*/

.grid-ex4 {
    display: grid;
    max-width: 400px;
    margin: 0 auto;
    border: 1px solid #ccc;
    background: rgb(98, 2, 2);
}

.logo {
    grid-area: logo;
}

.nav {
    grid-area: nav;
}

.content {
    grid-area: content;
}

.sidenav {
    grid-area: sidenav;
}

.advert {
    grid-area: advert;
}

.footer {
    grid-area: footer;
}

.grid-template-areas-1 {
    grid-template-areas:
    "logo nav nav"
    "sidenav content advert"
    "sidenav footer footer"
    ;
}

.grid-template-areas-2 { /*essa organização das áreas, será exibida conforme o posicionamento no CSS veja:*/
    grid-template-areas:
    "slidenav logo nav"
    "slidenav content advert"
    "slidenav content footer"
    ;
}

@media (max-width: 500px) { /*fará uma organização diferente quando diminuir a tela (responsivo)*/
    .grid-template-areas-2 {
        grid-template-areas:
        "logo logo logo"
        "sidenav sidenav sidenav"
        "nav nav nav"
        "content content content"
        "advert footer footer"
        ;
    }
}

.grid-template-areas-3 {
    grid-template-areas:
    "logo logo"
    "nav nav"
    "content content"
    "slidenav advert"
    "footer footer"
    ;
}

.grid-template-areas-4 {
    grid-template-columns: 30% 60% 10%;
    grid-template-rows: 50px 150px 50px;
    grid-template-areas:
    "logo nav nav"
    "sidenav content advert"
    "sidenav footer footer"
    ;
}

.grid-template-areas-5 {
    grid-template-areas:
    "logo content nav"
    ". content advert" /*o ponto cria uma área vazia*/
    "slidenav footer ."
    ;
}

/*grid-template*/

.grid-ex5 {
    display: grid;
    max-width: 400px;
    margin: 0 auto;
    border: 1px solid #ccc;
    background: rgb(3, 3, 82);
}

.grid-template-1 {
    grid-template: 50px 1fr / 100px 1fr 100px;
}

.grid-template-2 {
    grid-template:
    "logo nav nav" 50px /*primeira linha com 50px*/
    "sidenav content advert" 150px /*segunda linha com 150px*/
    "sidenav footer footer" 100px /*terceira linha com 100px*/
    / 100px 1fr 50px;
    /*A primeira coluna com 100px, a segunda 1fr e a terceira com 50px.*/
}

.logo {
    grid-area: logo;
}

.nav {
    grid-area: nav;
}

.content {
    grid-area: content;
}

.sidenav {
    grid-area: sidenav;
}

.advert {
    grid-area: advert;
}

.footer {
    grid-area: footer;
}

/*gap*/

.grid-ex6 {
    display: grid;
    max-width: 400px;
    margin: 0 auto;
    border: 1px solid #ccc;
    background: rgb(141, 27, 107);
}

.grid-template {
    grid-template:
    "logo nav nav" 50px
    "sidenav content advert" 150px
    "sidenav footer footer" 100px
    / 100px 1fr 50px; /*depois da barra, é definido a largura das colunas*/
}

.gap {
    gap: 20px;
}

.column-gap {
    gap: 2px;
    column-gap: 20px;
}

.row-gap {
    gap: 2px;
    row-gap: 20px;
}

.margin {
    margin-top: 10px;
    margin-left: 20px;
    margin-bottom: 50px;
}

.logo {
    grid-area: logo;
}

.nav {
    grid-area: nav;
}

.content {
    grid-area: content;
}

.sidenav {
    grid-area: sidenav;
}

.advert {
    grid-area: advert;
}

.footer {
    grid-area: footer;
}

/*grid-auto-columns*/



/*grid-auto-rows*/

/*grid-auto-flow*/

/*grid*/

/*justify-content*/

/*align-content*/

/*justify-items*/

/*align-items*/

/*grid-column*/

/*grid-row*/

/*grid-area*/

/*justify-self*/

/*align-self*/